const MILazyLoader={init:(o="lazy-load",t="lazy-loaded")=>{new MutationObserver(e=>{let s=Array.from(document.querySelectorAll("img.lazy-load:not(.lazy-loaded)"));e.forEach(e=>{e.addedNodes.forEach(e=>{e.classList.contains(o)&&!e.classList.contains(t)&&s.push(e)})}),a(s)}).observe(document.body,{childList:!0,subtree:!0});const a=e=>{const a=new IntersectionObserver((e,s)=>{e.forEach(({target:e,isIntersecting:s})=>{s&&(e.src=e.dataset.src,e.classList.add(t),a.unobserve(e))})});e.forEach(e=>{e.classList.remove(o),a.observe(e)})}}};