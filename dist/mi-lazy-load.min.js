const MILazyLoader={init:(t="lazy-load",r="lazy-loaded")=>{const a="lazy-capture",s=e=>{if(0!==e.length){const s=new IntersectionObserver((e,t)=>{e.forEach(({target:e,isIntersecting:t})=>{t&&e.dataset.src&&e.src.length!==e.dataset.src&&(e.src=e.dataset.src,e.classList.add(r),s.unobserve(e))})});e.forEach(e=>{e.classList.remove(t,a),s.observe(e)})}},o=e=>{e=e.querySelectorAll(`img.${t}:not(.${a}):not(.${r})`);return e.forEach(e=>e.classList.add(a)),e};var e=o(document);s(e),new MutationObserver(e=>{let t=[];e.forEach(e=>{e.addedNodes.forEach(e=>{1===e.nodeType&&(e=o(e),t.push(...e))})}),s(t)}).observe(document.body,{childList:!0,subtree:!0})}};