const MILazyLoader={init:(a="lazy-load",r="lazy-loaded")=>{const t=s=>{const t=new IntersectionObserver((s,e)=>{s.forEach(({target:s,isIntersecting:e})=>{e&&s.dataset.src&&s.src.length!==s.dataset.src&&(s.src=s.dataset.src,s.classList.add(r),t.unobserve(s))})});s.forEach(s=>{s.classList.remove(a),t.observe(s)})};t(Array.from(document.querySelectorAll(`img.${a}:not(.${r})`))),new MutationObserver(s=>{let e=[];s.forEach(s=>{s.addedNodes.forEach(s=>{s.classList.contains(a)&&!s.classList.contains(r)&&e.push(s)})}),t(e)}).observe(document.body,{childList:!0,subtree:!0})}};